--@name Death Laser Tester
--@author legokidlogan
--@server
--@include lkl/death_laser.txt

require( "lkl/death_laser.txt" )


local baseEnt = prop.create( chip():getPos() + Vector( 0, 0, 150 ), Angle(), "models/hunter/blocks/cube05x05x05.mdl", true )
baseEnt:setMass( 1000 )

local deathLaser = DeathLaser:new( baseEnt )
deathLaser:setTraceIgnore( owner(), true )

local weldedTo = chip():isWeldedTo()

if isValid( weldedTo ) then
    deathLaser:setTraceIgnore( chip():getAllConstrained(), true )
    baseEnt:setParent( weldedTo )
end


local _makeTargetFilter = DeathLaser.makeTargetFilter
function DeathLaser:makeTargetFilter()
    local filter = _makeTargetFilter( self )

    return function( ent )
        if ent == owner() then return false end

        return filter( ent )
    end
end


hook.add( "KeyPress", "TEST", function( ply, key )
    if ply ~= owner() then return end
    if key ~= IN_KEY.USE then return end

    local state = ( deathLaser:getStatus() + 1 ) % 3
    local dontPlayStopSounds = state ~= 0

    deathLaser:setStatus( state, dontPlayStopSounds )
end )


timer.create( "TEST_SetAimPos", 0.1, 0, function()
    local traceFilter = deathLaser:makeTraceFilter()
    local startPos = owner():getShootPos()
    local dir = owner():getAimVector()
    local tr = trace.line( startPos, startPos + dir * 10000, traceFilter )

    deathLaser:setAimPos( tr.HitPos )
end )
